# Admiral Demo Chart Values
# This file contains default values for quickly provisioning Admiral with all dependencies

# Admiral Server configuration
admiral-server:
  enabled: true
  replicaCount: 1
  image:
    repository: "admiral/server"
    tag: "latest"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: "admiral.admiral-demo.local"
        paths:
          - path: /
            pathType: Prefix

  config:
    database:
      host: "admiral-demo-postgresql"
      port: 5432
      database: "admiral"
      username: "admiral"
      password: "admiral-demo-password" # Should be changed in production

    keycloak:
      enabled: true
      realm: "master"
      clientId: "admiral-server"
      clientSecret: "admiral-demo-client-secret" # Matches the client secret in realm config
      authUrl: "http://admiral-demo-keycloak:8080"

    temporal:
      host: "admiral-demo-temporal-frontend"
      port: 7233
      namespace: "admiral"

    s3:
      endpoint: "http://admiral-demo-minio:9000"
      bucket: "admiral-data"
      accessKey: "minioadmin"
      secretKey: "minioadmin" # Should be changed in production

# Admiral Worker configuration
admiral-worker:
  enabled: true
  replicaCount: 2
  image:
    repository: "admiral/worker"
    tag: "latest"
    pullPolicy: IfNotPresent

  config:
    temporal:
      host: "admiral-demo-temporal-frontend"
      port: 7233
      namespace: "admiral"
      taskQueue: "admiral-tasks"

    s3:
      endpoint: "http://admiral-demo-minio:9000"
      bucket: "admiral-data"
      accessKey: "minioadmin"
      secretKey: "minioadmin" # Should be changed in production

# PostgreSQL configuration
postgresql:
  enabled: true
  # Force a static service name regardless of release name
  fullnameOverride: "admiral-demo-postgresql"
  auth:
    username: "admiral"
    password: "shipitnow"
    postgresPassword: "shipitnow"
    database: "admiral"

  primary:
    persistence:
      enabled: false
      size: "5Gi"

    initdb:
      scriptsConfigMap: "admiral-demo-postgres-init"

# Keycloak configuration
keycloak:
  enabled: true
  auth:
    adminUser: "admiral"
    adminPassword: "shipitnow"

  postgresql:
    enabled: false

  externalDatabase:
    host: "admiral-demo-postgresql"
    port: 5432
    user: "admiral"
    password: "shipitnow"
    database: "keycloak"

  keycloakConfigCli:
    enabled: true
    availabilityCheck:
      timeout: 180s
    configuration:
      master-realm.json: |
        {
          "realm": "master",
          "users": [
            {
              "username": "john.doe",
              "enabled": true,
              "emailVerified": true,
              "firstName": "John",
              "lastName": "Doe",  
              "email": "john.doe@example.com",
              "credentials": [
                {
                  "type": "password",
                  "value": "password123",
                  "temporary": false
                }
              ]
            },
            {
              "username": "jane.smith",
              "enabled": true,
              "emailVerified": true,
              "firstName": "Jane",
              "lastName": "Smith",
              "email": "jane.smith@example.com", 
              "credentials": [
                {
                  "type": "password",
                  "value": "password123",
                  "temporary": false
                }
              ]
            },
            {
              "username": "bob.wilson",
              "enabled": true,
              "emailVerified": true,
              "firstName": "Bob",
              "lastName": "Wilson",
              "email": "bob.wilson@example.com",
              "credentials": [
                {
                  "type": "password", 
                  "value": "password123",
                  "temporary": false
                }
              ]
            }
          ],
          "clients": [
            {
              "clientId": "admiral",
              "name": "Admiral",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "secret": "admiral-demo-client-secret",
              "redirectUris": [
                "http://localhost:8080/*",
                "http://admiral.admiral-demo.local/*",
                "https://admiral.admiral-demo.local/*"
              ],
              "webOrigins": [
                "http://localhost:8080",
                "http://admiral.admiral-demo.local", 
                "https://admiral.admiral-demo.local"
              ],
              "standardFlowEnabled": true,
              "directAccessGrantsEnabled": true,
              "publicClient": false,
              "protocol": "openid-connect"
            }
          ]
        }

  # Longer timeouts to avoid restarts during heavy initialization
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 6

  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 12

# Temporal configuration
temporal:
  enabled: true

  cassandra:
    enabled: false

  mysql:
    enabled: false

  postgresql:
    enabled: false

  elasticsearch:
    enabled: false

  prometheus:
    enabled: false

  grafana:
    enabled: false

  server:
    replicaCount: 1

    config:
      persistence:
        default:
          driver: "sql"
          sql:
            driver: "postgres12"
            host: "admiral-demo-postgresql"
            port: 5432
            database: "temporal"
            user: "admiral"
            password: "shipitnow"
            maxConns: 20
            maxConnLifetime: "1h"
        visibility:
          driver: "sql"
          sql:
            driver: "postgres12"
            host: "admiral-demo-postgresql"
            port: 5432
            database: "temporal_visibility"
            user: "admiral"
            password: "shipitnow"
            maxConns: 20
            maxConnLifetime: "1h"
      namespaces:
        create: true
        namespace:
          - name: "default"
            retention: "3d"
          - name: "admiral"
            retention: "7d"

  admintools:
    enabled: false

  web:
    enabled: false

  schema:
    setup:
      enabled: true
    update:
      enabled: true

# MinIO configuration
minio:
  enabled: true
  auth:
    rootUser: "admiral"
    rootPassword: "shipitnow"

  console:
    enabled: false

  defaultBuckets: "manifests,revisions"

  persistence:
    enabled: false
    size: "5Gi"

  service:
    type: ClusterIP
    ports:
      api: 9000
      console: 9090
